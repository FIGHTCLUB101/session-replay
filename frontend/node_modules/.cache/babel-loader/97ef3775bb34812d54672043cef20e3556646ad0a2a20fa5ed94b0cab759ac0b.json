{"ast":null,"code":"import { __spreadArray, __read } from '../../../ext/tslib/tslib.es6.js';\nimport { decode } from '../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\nimport { CanvasContext } from '../../types.js';\nvar webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n  var contextMap = webGLVarMap.get(ctx);\n  if (!contextMap) {\n    contextMap = new Map();\n    webGLVarMap.set(ctx, contextMap);\n  }\n  if (!contextMap.has(ctor)) {\n    contextMap.set(ctor, []);\n  }\n  return contextMap.get(ctor);\n}\nfunction getContext(target, type) {\n  try {\n    if (type === CanvasContext.WebGL) {\n      return target.getContext('webgl') || target.getContext('experimental-webgl');\n    }\n    return target.getContext('webgl2');\n  } catch (e) {\n    return null;\n  }\n}\nvar WebGLVariableConstructorsNames = ['WebGLActiveInfo', 'WebGLBuffer', 'WebGLFramebuffer', 'WebGLProgram', 'WebGLRenderbuffer', 'WebGLShader', 'WebGLShaderPrecisionFormat', 'WebGLTexture', 'WebGLUniformLocation', 'WebGLVertexArrayObject'];\nfunction saveToWebGLVarMap(ctx, result) {\n  if (!(result === null || result === void 0 ? void 0 : result.constructor)) return;\n  var name = result.constructor.name;\n  if (!WebGLVariableConstructorsNames.includes(name)) return;\n  var variables = variableListFor(ctx, name);\n  if (!variables.includes(result)) variables.push(result);\n}\nfunction deserializeArg(imageMap, ctx) {\n  return function (arg) {\n    if (arg && typeof arg === 'object' && 'rr_type' in arg) {\n      if ('index' in arg) {\n        var name_1 = arg.rr_type,\n          index = arg.index;\n        return variableListFor(ctx, name_1)[index];\n      } else if ('args' in arg) {\n        var name_2 = arg.rr_type,\n          args = arg.args;\n        var ctor = window[name_2];\n        return new (ctor.bind.apply(ctor, __spreadArray([void 0], __read(args.map(deserializeArg(imageMap, ctx))), false)))();\n      } else if ('base64' in arg) {\n        return decode(arg.base64);\n      } else if ('src' in arg) {\n        var image = imageMap.get(arg.src);\n        if (image) {\n          return image;\n        } else {\n          var image_1 = new Image();\n          image_1.src = arg.src;\n          imageMap.set(arg.src, image_1);\n          return image_1;\n        }\n      }\n    } else if (Array.isArray(arg)) {\n      return arg.map(deserializeArg(imageMap, ctx));\n    }\n    return arg;\n  };\n}\nfunction webglMutation(_a) {\n  var mutation = _a.mutation,\n    target = _a.target,\n    type = _a.type,\n    imageMap = _a.imageMap,\n    errorHandler = _a.errorHandler;\n  try {\n    var ctx = getContext(target, type);\n    if (!ctx) return;\n    if (mutation.setter) {\n      ctx[mutation.property] = mutation.args[0];\n      return;\n    }\n    var original = ctx[mutation.property];\n    var args = mutation.args.map(deserializeArg(imageMap, ctx));\n    var result = original.apply(ctx, args);\n    saveToWebGLVarMap(ctx, result);\n    var debugMode = false;\n    if (debugMode) {\n      if (mutation.property === 'compileShader') {\n        if (!ctx.getShaderParameter(args[0], ctx.COMPILE_STATUS)) console.warn('something went wrong in replay', ctx.getShaderInfoLog(args[0]));\n      } else if (mutation.property === 'linkProgram') {\n        ctx.validateProgram(args[0]);\n        if (!ctx.getProgramParameter(args[0], ctx.LINK_STATUS)) console.warn('something went wrong in replay', ctx.getProgramInfoLog(args[0]));\n      }\n      var webglError = ctx.getError();\n      if (webglError !== ctx.NO_ERROR) {\n        console.warn.apply(console, __spreadArray(['WEBGL ERROR', webglError, 'on command:', mutation.property], __read(args), false));\n      }\n    }\n  } catch (error) {\n    errorHandler(mutation, error);\n  }\n}\nexport default webglMutation;\nexport { deserializeArg, variableListFor };","map":{"version":3,"names":["__spreadArray","__read","decode","CanvasContext","webGLVarMap","Map","variableListFor","ctx","ctor","contextMap","get","set","has","getContext","target","type","WebGL","e","WebGLVariableConstructorsNames","saveToWebGLVarMap","result","constructor","name","includes","variables","push","deserializeArg","imageMap","arg","name_1","rr_type","index","name_2","args","window","bind","apply","map","base64","image","src","image_1","Image","Array","isArray","webglMutation","_a","mutation","errorHandler","setter","property","original","debugMode","getShaderParameter","COMPILE_STATUS","console","warn","getShaderInfoLog","validateProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","webglError","getError","NO_ERROR","error"],"sources":["C:/Users/PRIYAM/OneDrive/Desktop/session replay/frontend/node_modules/rrweb/es/rrweb/packages/rrweb/src/replay/canvas/webgl.js"],"sourcesContent":["import { __spreadArray, __read } from '../../../ext/tslib/tslib.es6.js';\nimport { decode } from '../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\nimport { CanvasContext } from '../../types.js';\n\nvar webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    var contextMap = webGLVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        webGLVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nfunction getContext(target, type) {\n    try {\n        if (type === CanvasContext.WebGL) {\n            return (target.getContext('webgl') || target.getContext('experimental-webgl'));\n        }\n        return target.getContext('webgl2');\n    }\n    catch (e) {\n        return null;\n    }\n}\nvar WebGLVariableConstructorsNames = [\n    'WebGLActiveInfo',\n    'WebGLBuffer',\n    'WebGLFramebuffer',\n    'WebGLProgram',\n    'WebGLRenderbuffer',\n    'WebGLShader',\n    'WebGLShaderPrecisionFormat',\n    'WebGLTexture',\n    'WebGLUniformLocation',\n    'WebGLVertexArrayObject',\n];\nfunction saveToWebGLVarMap(ctx, result) {\n    if (!(result === null || result === void 0 ? void 0 : result.constructor))\n        return;\n    var name = result.constructor.name;\n    if (!WebGLVariableConstructorsNames.includes(name))\n        return;\n    var variables = variableListFor(ctx, name);\n    if (!variables.includes(result))\n        variables.push(result);\n}\nfunction deserializeArg(imageMap, ctx) {\n    return function (arg) {\n        if (arg && typeof arg === 'object' && 'rr_type' in arg) {\n            if ('index' in arg) {\n                var name_1 = arg.rr_type, index = arg.index;\n                return variableListFor(ctx, name_1)[index];\n            }\n            else if ('args' in arg) {\n                var name_2 = arg.rr_type, args = arg.args;\n                var ctor = window[name_2];\n                return new (ctor.bind.apply(ctor, __spreadArray([void 0], __read(args.map(deserializeArg(imageMap, ctx))), false)))();\n            }\n            else if ('base64' in arg) {\n                return decode(arg.base64);\n            }\n            else if ('src' in arg) {\n                var image = imageMap.get(arg.src);\n                if (image) {\n                    return image;\n                }\n                else {\n                    var image_1 = new Image();\n                    image_1.src = arg.src;\n                    imageMap.set(arg.src, image_1);\n                    return image_1;\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            return arg.map(deserializeArg(imageMap, ctx));\n        }\n        return arg;\n    };\n}\nfunction webglMutation(_a) {\n    var mutation = _a.mutation, target = _a.target, type = _a.type, imageMap = _a.imageMap, errorHandler = _a.errorHandler;\n    try {\n        var ctx = getContext(target, type);\n        if (!ctx)\n            return;\n        if (mutation.setter) {\n            ctx[mutation.property] = mutation.args[0];\n            return;\n        }\n        var original = ctx[mutation.property];\n        var args = mutation.args.map(deserializeArg(imageMap, ctx));\n        var result = original.apply(ctx, args);\n        saveToWebGLVarMap(ctx, result);\n        var debugMode = false;\n        if (debugMode) {\n            if (mutation.property === 'compileShader') {\n                if (!ctx.getShaderParameter(args[0], ctx.COMPILE_STATUS))\n                    console.warn('something went wrong in replay', ctx.getShaderInfoLog(args[0]));\n            }\n            else if (mutation.property === 'linkProgram') {\n                ctx.validateProgram(args[0]);\n                if (!ctx.getProgramParameter(args[0], ctx.LINK_STATUS))\n                    console.warn('something went wrong in replay', ctx.getProgramInfoLog(args[0]));\n            }\n            var webglError = ctx.getError();\n            if (webglError !== ctx.NO_ERROR) {\n                console.warn.apply(console, __spreadArray(['WEBGL ERROR',\n                    webglError,\n                    'on command:',\n                    mutation.property], __read(args), false));\n            }\n        }\n    }\n    catch (error) {\n        errorHandler(mutation, error);\n    }\n}\n\nexport default webglMutation;\nexport { deserializeArg, variableListFor };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}