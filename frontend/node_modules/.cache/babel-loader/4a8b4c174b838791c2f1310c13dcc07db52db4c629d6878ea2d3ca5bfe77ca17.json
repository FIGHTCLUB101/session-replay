{"ast":null,"code":"import { __values, __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { PLUGIN_NAME } from '../record/index.js';\nimport { EventType, IncrementalSource } from '../../../types.js';\nvar ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nvar defaultLogConfig = {\n  level: ['assert', 'clear', 'count', 'countReset', 'debug', 'dir', 'dirxml', 'error', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'table', 'time', 'timeEnd', 'timeLog', 'trace', 'warn'],\n  replayLogger: undefined\n};\nvar LogReplayPlugin = function () {\n  function LogReplayPlugin(config) {\n    this.config = Object.assign(defaultLogConfig, config);\n  }\n  LogReplayPlugin.prototype.getConsoleLogger = function () {\n    var e_1, _a;\n    var _this = this;\n    var replayLogger = {};\n    var _loop_1 = function (level) {\n      if (level === 'trace') {\n        replayLogger[level] = function (data) {\n          var logger = console.log[ORIGINAL_ATTRIBUTE_NAME] ? console.log[ORIGINAL_ATTRIBUTE_NAME] : console.log;\n          logger.apply(void 0, __spreadArray(__spreadArray([], __read(data.payload.map(function (s) {\n            return JSON.parse(s);\n          })), false), [_this.formatMessage(data)], false));\n        };\n      } else {\n        replayLogger[level] = function (data) {\n          var logger = console[level][ORIGINAL_ATTRIBUTE_NAME] ? console[level][ORIGINAL_ATTRIBUTE_NAME] : console[level];\n          logger.apply(void 0, __spreadArray(__spreadArray([], __read(data.payload.map(function (s) {\n            return JSON.parse(s);\n          })), false), [_this.formatMessage(data)], false));\n        };\n      }\n    };\n    try {\n      for (var _b = __values(this.config.level), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var level = _c.value;\n        _loop_1(level);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return replayLogger;\n  };\n  LogReplayPlugin.prototype.formatMessage = function (data) {\n    if (data.trace.length === 0) {\n      return '';\n    }\n    var stackPrefix = '\\n\\tat ';\n    var result = stackPrefix;\n    result += data.trace.join(stackPrefix);\n    return result;\n  };\n  return LogReplayPlugin;\n}();\nvar getReplayConsolePlugin = function (options) {\n  var replayLogger = (options === null || options === void 0 ? void 0 : options.replayLogger) || new LogReplayPlugin(options).getConsoleLogger();\n  return {\n    handler: function (event, _isSync, context) {\n      var logData = null;\n      if (event.type === EventType.IncrementalSnapshot && event.data.source === IncrementalSource.Log) {\n        logData = event.data;\n      } else if (event.type === EventType.Plugin && event.data.plugin === PLUGIN_NAME) {\n        logData = event.data.payload;\n      }\n      if (logData) {\n        try {\n          if (typeof replayLogger[logData.level] === 'function') {\n            replayLogger[logData.level](logData);\n          }\n        } catch (error) {\n          if (context.replayer.config.showWarning) {\n            console.warn(error);\n          }\n        }\n      }\n    }\n  };\n};\nexport { getReplayConsolePlugin };","map":{"version":3,"names":["__values","__spreadArray","__read","PLUGIN_NAME","EventType","IncrementalSource","ORIGINAL_ATTRIBUTE_NAME","defaultLogConfig","level","replayLogger","undefined","LogReplayPlugin","config","Object","assign","prototype","getConsoleLogger","e_1","_a","_this","_loop_1","data","logger","console","log","apply","payload","map","s","JSON","parse","formatMessage","_b","_c","next","done","value","e_1_1","error","return","call","trace","length","stackPrefix","result","join","getReplayConsolePlugin","options","handler","event","_isSync","context","logData","type","IncrementalSnapshot","source","Log","Plugin","plugin","replayer","showWarning","warn"],"sources":["C:/Users/PRIYAM/OneDrive/Desktop/session replay/frontend/node_modules/rrweb/es/rrweb/packages/rrweb/src/plugins/console/replay/index.js"],"sourcesContent":["import { __values, __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { PLUGIN_NAME } from '../record/index.js';\nimport { EventType, IncrementalSource } from '../../../types.js';\n\nvar ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nvar defaultLogConfig = {\n    level: [\n        'assert',\n        'clear',\n        'count',\n        'countReset',\n        'debug',\n        'dir',\n        'dirxml',\n        'error',\n        'group',\n        'groupCollapsed',\n        'groupEnd',\n        'info',\n        'log',\n        'table',\n        'time',\n        'timeEnd',\n        'timeLog',\n        'trace',\n        'warn',\n    ],\n    replayLogger: undefined,\n};\nvar LogReplayPlugin = (function () {\n    function LogReplayPlugin(config) {\n        this.config = Object.assign(defaultLogConfig, config);\n    }\n    LogReplayPlugin.prototype.getConsoleLogger = function () {\n        var e_1, _a;\n        var _this = this;\n        var replayLogger = {};\n        var _loop_1 = function (level) {\n            if (level === 'trace') {\n                replayLogger[level] = function (data) {\n                    var logger = console.log[ORIGINAL_ATTRIBUTE_NAME]\n                        ? console.log[ORIGINAL_ATTRIBUTE_NAME]\n                        : console.log;\n                    logger.apply(void 0, __spreadArray(__spreadArray([], __read(data.payload.map(function (s) { return JSON.parse(s); })), false), [_this.formatMessage(data)], false));\n                };\n            }\n            else {\n                replayLogger[level] = function (data) {\n                    var logger = console[level][ORIGINAL_ATTRIBUTE_NAME]\n                        ? console[level][ORIGINAL_ATTRIBUTE_NAME]\n                        : console[level];\n                    logger.apply(void 0, __spreadArray(__spreadArray([], __read(data.payload.map(function (s) { return JSON.parse(s); })), false), [_this.formatMessage(data)], false));\n                };\n            }\n        };\n        try {\n            for (var _b = __values(this.config.level), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var level = _c.value;\n                _loop_1(level);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return replayLogger;\n    };\n    LogReplayPlugin.prototype.formatMessage = function (data) {\n        if (data.trace.length === 0) {\n            return '';\n        }\n        var stackPrefix = '\\n\\tat ';\n        var result = stackPrefix;\n        result += data.trace.join(stackPrefix);\n        return result;\n    };\n    return LogReplayPlugin;\n}());\nvar getReplayConsolePlugin = function (options) {\n    var replayLogger = (options === null || options === void 0 ? void 0 : options.replayLogger) || new LogReplayPlugin(options).getConsoleLogger();\n    return {\n        handler: function (event, _isSync, context) {\n            var logData = null;\n            if (event.type === EventType.IncrementalSnapshot &&\n                event.data.source === IncrementalSource.Log) {\n                logData = event.data;\n            }\n            else if (event.type === EventType.Plugin &&\n                event.data.plugin === PLUGIN_NAME) {\n                logData = event.data.payload;\n            }\n            if (logData) {\n                try {\n                    if (typeof replayLogger[logData.level] === 'function') {\n                        replayLogger[logData.level](logData);\n                    }\n                }\n                catch (error) {\n                    if (context.replayer.config.showWarning) {\n                        console.warn(error);\n                    }\n                }\n            }\n        },\n    };\n};\n\nexport { getReplayConsolePlugin };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}