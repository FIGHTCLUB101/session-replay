{"ast":null,"code":"import { __values } from '../ext/tslib/tslib.es6.js';\nimport { IncrementalSource } from './types.js';\nimport { IGNORED_NODE, isShadowRoot, NodeType } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\nfunction on(type, fn, target) {\n  if (target === void 0) {\n    target = document;\n  }\n  var options = {\n    capture: true,\n    passive: true\n  };\n  target.addEventListener(type, fn, options);\n  return function () {\n    return target.removeEventListener(type, fn, options);\n  };\n}\nfunction createMirror() {\n  return {\n    map: {},\n    getId: function (n) {\n      if (!n || !n.__sn) {\n        return -1;\n      }\n      return n.__sn.id;\n    },\n    getNode: function (id) {\n      return this.map[id] || null;\n    },\n    removeNodeFromMap: function (n) {\n      var _this = this;\n      var id = n.__sn && n.__sn.id;\n      delete this.map[id];\n      if (n.childNodes) {\n        n.childNodes.forEach(function (child) {\n          return _this.removeNodeFromMap(child);\n        });\n      }\n    },\n    has: function (id) {\n      return this.map.hasOwnProperty(id);\n    },\n    reset: function () {\n      this.map = {};\n    }\n  };\n}\nvar DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' + '\\r\\n' + 'now you can use replayer.getMirror() to access the mirror instance of a replayer,' + '\\r\\n' + 'or you can use record.mirror to access the mirror instance during recording.';\nvar _mirror = {\n  map: {},\n  getId: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return -1;\n  },\n  getNode: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return null;\n  },\n  removeNodeFromMap: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n  },\n  has: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return false;\n  },\n  reset: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n  }\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n  _mirror = new Proxy(_mirror, {\n    get: function (target, prop, receiver) {\n      if (prop === 'map') {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n      }\n      return Reflect.get(target, prop, receiver);\n    }\n  });\n}\nfunction throttle(func, wait, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var timeout = null;\n  var previous = 0;\n  return function (arg) {\n    var now = Date.now();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    var remaining = wait - (now - previous);\n    var context = this;\n    var args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(function () {\n        previous = options.leading === false ? 0 : Date.now();\n        timeout = null;\n        func.apply(context, args);\n      }, remaining);\n    }\n  };\n}\nfunction hookSetter(target, key, d, isRevoked, win) {\n  if (win === void 0) {\n    win = window;\n  }\n  var original = win.Object.getOwnPropertyDescriptor(target, key);\n  win.Object.defineProperty(target, key, isRevoked ? d : {\n    set: function (value) {\n      var _this = this;\n      setTimeout(function () {\n        d.set.call(_this, value);\n      }, 0);\n      if (original && original.set) {\n        original.set.call(this, value);\n      }\n    }\n  });\n  return function () {\n    return hookSetter(target, key, original || {}, true);\n  };\n}\nfunction patch(source, name, replacement) {\n  try {\n    if (!(name in source)) {\n      return function () {};\n    }\n    var original_1 = source[name];\n    var wrapped = replacement(original_1);\n    if (typeof wrapped === 'function') {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __rrweb_original__: {\n          enumerable: false,\n          value: original_1\n        }\n      });\n    }\n    source[name] = wrapped;\n    return function () {\n      source[name] = original_1;\n    };\n  } catch (_a) {\n    return function () {};\n  }\n}\nfunction getWindowHeight() {\n  return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight;\n}\nfunction getWindowWidth() {\n  return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth;\n}\nfunction isBlocked(node, blockClass) {\n  if (!node) {\n    return false;\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    var needBlock_1 = false;\n    if (typeof blockClass === 'string') {\n      if (node.closest !== undefined) {\n        return node.closest('.' + blockClass) !== null;\n      } else {\n        needBlock_1 = node.classList.contains(blockClass);\n      }\n    } else {\n      node.classList.forEach(function (className) {\n        if (blockClass.test(className)) {\n          needBlock_1 = true;\n        }\n      });\n    }\n    return needBlock_1 || isBlocked(node.parentNode, blockClass);\n  }\n  if (node.nodeType === node.TEXT_NODE) {\n    return isBlocked(node.parentNode, blockClass);\n  }\n  return isBlocked(node.parentNode, blockClass);\n}\nfunction isIgnored(n) {\n  if ('__sn' in n) {\n    return n.__sn.id === IGNORED_NODE;\n  }\n  return false;\n}\nfunction isAncestorRemoved(target, mirror) {\n  if (isShadowRoot(target)) {\n    return false;\n  }\n  var id = mirror.getId(target);\n  if (!mirror.has(id)) {\n    return true;\n  }\n  if (target.parentNode && target.parentNode.nodeType === target.DOCUMENT_NODE) {\n    return false;\n  }\n  if (!target.parentNode) {\n    return true;\n  }\n  return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction isTouchEvent(event) {\n  return Boolean(event.changedTouches);\n}\nfunction polyfill(win) {\n  if (win === void 0) {\n    win = window;\n  }\n  if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n    win.NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n  if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n    win.DOMTokenList.prototype.forEach = Array.prototype.forEach;\n  }\n  if (!Node.prototype.contains) {\n    Node.prototype.contains = function contains(node) {\n      if (!(0 in arguments)) {\n        throw new TypeError('1 argument is required');\n      }\n      do {\n        if (this === node) {\n          return true;\n        }\n      } while (node = node && node.parentNode);\n      return false;\n    };\n  }\n}\nvar TreeIndex = function () {\n  function TreeIndex() {\n    this.reset();\n  }\n  TreeIndex.prototype.add = function (mutation) {\n    var parentTreeNode = this.indexes.get(mutation.parentId);\n    var treeNode = {\n      id: mutation.node.id,\n      mutation: mutation,\n      children: [],\n      texts: [],\n      attributes: []\n    };\n    if (!parentTreeNode) {\n      this.tree[treeNode.id] = treeNode;\n    } else {\n      treeNode.parent = parentTreeNode;\n      parentTreeNode.children[treeNode.id] = treeNode;\n    }\n    this.indexes.set(treeNode.id, treeNode);\n  };\n  TreeIndex.prototype.remove = function (mutation, mirror) {\n    var _this = this;\n    var parentTreeNode = this.indexes.get(mutation.parentId);\n    var treeNode = this.indexes.get(mutation.id);\n    var deepRemoveFromMirror = function (id) {\n      _this.removeIdSet.add(id);\n      var node = mirror.getNode(id);\n      node === null || node === void 0 ? void 0 : node.childNodes.forEach(function (childNode) {\n        if ('__sn' in childNode) {\n          deepRemoveFromMirror(childNode.__sn.id);\n        }\n      });\n    };\n    var deepRemoveFromTreeIndex = function (node) {\n      _this.removeIdSet.add(node.id);\n      Object.values(node.children).forEach(function (n) {\n        return deepRemoveFromTreeIndex(n);\n      });\n      var _treeNode = _this.indexes.get(node.id);\n      if (_treeNode) {\n        var _parentTreeNode = _treeNode.parent;\n        if (_parentTreeNode) {\n          delete _treeNode.parent;\n          delete _parentTreeNode.children[_treeNode.id];\n          _this.indexes.delete(mutation.id);\n        }\n      }\n    };\n    if (!treeNode) {\n      this.removeNodeMutations.push(mutation);\n      deepRemoveFromMirror(mutation.id);\n    } else if (!parentTreeNode) {\n      delete this.tree[treeNode.id];\n      this.indexes.delete(treeNode.id);\n      deepRemoveFromTreeIndex(treeNode);\n    } else {\n      delete treeNode.parent;\n      delete parentTreeNode.children[treeNode.id];\n      this.indexes.delete(mutation.id);\n      deepRemoveFromTreeIndex(treeNode);\n    }\n  };\n  TreeIndex.prototype.text = function (mutation) {\n    var treeNode = this.indexes.get(mutation.id);\n    if (treeNode) {\n      treeNode.texts.push(mutation);\n    } else {\n      this.textMutations.push(mutation);\n    }\n  };\n  TreeIndex.prototype.attribute = function (mutation) {\n    var treeNode = this.indexes.get(mutation.id);\n    if (treeNode) {\n      treeNode.attributes.push(mutation);\n    } else {\n      this.attributeMutations.push(mutation);\n    }\n  };\n  TreeIndex.prototype.scroll = function (d) {\n    this.scrollMap.set(d.id, d);\n  };\n  TreeIndex.prototype.input = function (d) {\n    this.inputMap.set(d.id, d);\n  };\n  TreeIndex.prototype.flush = function () {\n    var e_1, _a, e_2, _b;\n    var _this = this;\n    var _c = this,\n      tree = _c.tree,\n      removeNodeMutations = _c.removeNodeMutations,\n      textMutations = _c.textMutations,\n      attributeMutations = _c.attributeMutations;\n    var batchMutationData = {\n      source: IncrementalSource.Mutation,\n      removes: removeNodeMutations,\n      texts: textMutations,\n      attributes: attributeMutations,\n      adds: []\n    };\n    var walk = function (treeNode, removed) {\n      if (removed) {\n        _this.removeIdSet.add(treeNode.id);\n      }\n      batchMutationData.texts = batchMutationData.texts.concat(removed ? [] : treeNode.texts).filter(function (m) {\n        return !_this.removeIdSet.has(m.id);\n      });\n      batchMutationData.attributes = batchMutationData.attributes.concat(removed ? [] : treeNode.attributes).filter(function (m) {\n        return !_this.removeIdSet.has(m.id);\n      });\n      if (!_this.removeIdSet.has(treeNode.id) && !_this.removeIdSet.has(treeNode.mutation.parentId) && !removed) {\n        batchMutationData.adds.push(treeNode.mutation);\n        if (treeNode.children) {\n          Object.values(treeNode.children).forEach(function (n) {\n            return walk(n, false);\n          });\n        }\n      } else {\n        Object.values(treeNode.children).forEach(function (n) {\n          return walk(n, true);\n        });\n      }\n    };\n    Object.values(tree).forEach(function (n) {\n      return walk(n, false);\n    });\n    try {\n      for (var _d = __values(this.scrollMap.keys()), _e = _d.next(); !_e.done; _e = _d.next()) {\n        var id = _e.value;\n        if (this.removeIdSet.has(id)) {\n          this.scrollMap.delete(id);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    try {\n      for (var _f = __values(this.inputMap.keys()), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var id = _g.value;\n        if (this.removeIdSet.has(id)) {\n          this.inputMap.delete(id);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    var scrollMap = new Map(this.scrollMap);\n    var inputMap = new Map(this.inputMap);\n    this.reset();\n    return {\n      mutationData: batchMutationData,\n      scrollMap: scrollMap,\n      inputMap: inputMap\n    };\n  };\n  TreeIndex.prototype.reset = function () {\n    this.tree = [];\n    this.indexes = new Map();\n    this.removeNodeMutations = [];\n    this.textMutations = [];\n    this.attributeMutations = [];\n    this.removeIdSet = new Set();\n    this.scrollMap = new Map();\n    this.inputMap = new Map();\n  };\n  TreeIndex.prototype.idRemoved = function (id) {\n    return this.removeIdSet.has(id);\n  };\n  return TreeIndex;\n}();\nfunction queueToResolveTrees(queue) {\n  var e_3, _a;\n  var queueNodeMap = {};\n  var putIntoMap = function (m, parent) {\n    var nodeInTree = {\n      value: m,\n      parent: parent,\n      children: []\n    };\n    queueNodeMap[m.node.id] = nodeInTree;\n    return nodeInTree;\n  };\n  var queueNodeTrees = [];\n  try {\n    for (var queue_1 = __values(queue), queue_1_1 = queue_1.next(); !queue_1_1.done; queue_1_1 = queue_1.next()) {\n      var mutation = queue_1_1.value;\n      var nextId = mutation.nextId,\n        parentId = mutation.parentId;\n      if (nextId && nextId in queueNodeMap) {\n        var nextInTree = queueNodeMap[nextId];\n        if (nextInTree.parent) {\n          var idx = nextInTree.parent.children.indexOf(nextInTree);\n          nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\n        } else {\n          var idx = queueNodeTrees.indexOf(nextInTree);\n          queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\n        }\n        continue;\n      }\n      if (parentId in queueNodeMap) {\n        var parentInTree = queueNodeMap[parentId];\n        parentInTree.children.push(putIntoMap(mutation, parentInTree));\n        continue;\n      }\n      queueNodeTrees.push(putIntoMap(mutation, null));\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (queue_1_1 && !queue_1_1.done && (_a = queue_1.return)) _a.call(queue_1);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n  return queueNodeTrees;\n}\nfunction iterateResolveTree(tree, cb) {\n  cb(tree.value);\n  for (var i = tree.children.length - 1; i >= 0; i--) {\n    iterateResolveTree(tree.children[i], cb);\n  }\n}\nfunction isIframeINode(node) {\n  if ('__sn' in node) {\n    return node.__sn.type === NodeType.Element && node.__sn.tagName === 'iframe';\n  }\n  return false;\n}\nfunction getBaseDimension(node, rootIframe) {\n  var _a, _b;\n  var frameElement = (_b = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b.frameElement;\n  if (!frameElement || frameElement === rootIframe) {\n    return {\n      x: 0,\n      y: 0,\n      relativeScale: 1,\n      absoluteScale: 1\n    };\n  }\n  var frameDimension = frameElement.getBoundingClientRect();\n  var frameBaseDimension = getBaseDimension(frameElement, rootIframe);\n  var relativeScale = frameDimension.height / frameElement.clientHeight;\n  return {\n    x: frameDimension.x * frameBaseDimension.relativeScale + frameBaseDimension.x,\n    y: frameDimension.y * frameBaseDimension.relativeScale + frameBaseDimension.y,\n    relativeScale: relativeScale,\n    absoluteScale: frameBaseDimension.absoluteScale * relativeScale\n  };\n}\nfunction hasShadowRoot(n) {\n  return Boolean(n === null || n === void 0 ? void 0 : n.shadowRoot);\n}\nexport { TreeIndex, _mirror, createMirror, getBaseDimension, getWindowHeight, getWindowWidth, hasShadowRoot, hookSetter, isAncestorRemoved, isBlocked, isIframeINode, isIgnored, isTouchEvent, iterateResolveTree, on, patch, polyfill, queueToResolveTrees, throttle };","map":{"version":3,"names":["__values","IncrementalSource","IGNORED_NODE","isShadowRoot","NodeType","on","type","fn","target","document","options","capture","passive","addEventListener","removeEventListener","createMirror","map","getId","n","__sn","id","getNode","removeNodeFromMap","_this","childNodes","forEach","child","has","hasOwnProperty","reset","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","console","error","window","Proxy","Reflect","get","prop","receiver","throttle","func","wait","timeout","previous","arg","now","Date","leading","remaining","context","args","arguments","clearTimeout","apply","trailing","setTimeout","hookSetter","key","d","isRevoked","win","original","Object","getOwnPropertyDescriptor","defineProperty","set","value","call","patch","source","name","replacement","original_1","wrapped","prototype","defineProperties","__rrweb_original__","enumerable","_a","getWindowHeight","innerHeight","documentElement","clientHeight","body","getWindowWidth","innerWidth","clientWidth","isBlocked","node","blockClass","nodeType","ELEMENT_NODE","needBlock_1","closest","undefined","classList","contains","className","test","parentNode","TEXT_NODE","isIgnored","isAncestorRemoved","mirror","DOCUMENT_NODE","isTouchEvent","event","Boolean","changedTouches","polyfill","NodeList","Array","DOMTokenList","Node","TypeError","TreeIndex","add","mutation","parentTreeNode","indexes","parentId","treeNode","children","texts","attributes","tree","parent","remove","deepRemoveFromMirror","removeIdSet","childNode","deepRemoveFromTreeIndex","values","_treeNode","_parentTreeNode","delete","removeNodeMutations","push","text","textMutations","attribute","attributeMutations","scroll","scrollMap","input","inputMap","flush","e_1","e_2","_b","_c","batchMutationData","Mutation","removes","adds","walk","removed","concat","filter","m","_d","keys","_e","next","done","e_1_1","return","_f","_g","e_2_1","Map","mutationData","Set","idRemoved","queueToResolveTrees","queue","e_3","queueNodeMap","putIntoMap","nodeInTree","queueNodeTrees","queue_1","queue_1_1","nextId","nextInTree","idx","indexOf","splice","parentInTree","e_3_1","iterateResolveTree","cb","i","length","isIframeINode","Element","tagName","getBaseDimension","rootIframe","frameElement","ownerDocument","defaultView","x","y","relativeScale","absoluteScale","frameDimension","getBoundingClientRect","frameBaseDimension","height","hasShadowRoot","shadowRoot"],"sources":["C:/Users/PRIYAM/OneDrive/Desktop/session replay/frontend/node_modules/rrweb/es/rrweb/packages/rrweb/src/utils.js"],"sourcesContent":["import { __values } from '../ext/tslib/tslib.es6.js';\nimport { IncrementalSource } from './types.js';\nimport { IGNORED_NODE, isShadowRoot, NodeType } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target) {\n    if (target === void 0) { target = document; }\n    var options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return function () { return target.removeEventListener(type, fn, options); };\n}\nfunction createMirror() {\n    return {\n        map: {},\n        getId: function (n) {\n            if (!n || !n.__sn) {\n                return -1;\n            }\n            return n.__sn.id;\n        },\n        getNode: function (id) {\n            return this.map[id] || null;\n        },\n        removeNodeFromMap: function (n) {\n            var _this = this;\n            var id = n.__sn && n.__sn.id;\n            delete this.map[id];\n            if (n.childNodes) {\n                n.childNodes.forEach(function (child) {\n                    return _this.removeNodeFromMap(child);\n                });\n            }\n        },\n        has: function (id) {\n            return this.map.hasOwnProperty(id);\n        },\n        reset: function () {\n            this.map = {};\n        },\n    };\n}\nvar DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nvar _mirror = {\n    map: {},\n    getId: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get: function (target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle(func, wait, options) {\n    if (options === void 0) { options = {}; }\n    var timeout = null;\n    var previous = 0;\n    return function (arg) {\n        var now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        var remaining = wait - (now - previous);\n        var context = this;\n        var args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(function () {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win) {\n    if (win === void 0) { win = window; }\n    var original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set: function (value) {\n                var _this = this;\n                setTimeout(function () {\n                    d.set.call(_this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return function () { return hookSetter(target, key, original || {}, true); };\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return function () { };\n        }\n        var original_1 = source[name];\n        var wrapped = replacement(original_1);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original_1,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return function () {\n            source[name] = original_1;\n        };\n    }\n    catch (_a) {\n        return function () { };\n    }\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction isBlocked(node, blockClass) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType === node.ELEMENT_NODE) {\n        var needBlock_1 = false;\n        if (typeof blockClass === 'string') {\n            if (node.closest !== undefined) {\n                return node.closest('.' + blockClass) !== null;\n            }\n            else {\n                needBlock_1 = node.classList.contains(blockClass);\n            }\n        }\n        else {\n            node.classList.forEach(function (className) {\n                if (blockClass.test(className)) {\n                    needBlock_1 = true;\n                }\n            });\n        }\n        return needBlock_1 || isBlocked(node.parentNode, blockClass);\n    }\n    if (node.nodeType === node.TEXT_NODE) {\n        return isBlocked(node.parentNode, blockClass);\n    }\n    return isBlocked(node.parentNode, blockClass);\n}\nfunction isIgnored(n) {\n    if ('__sn' in n) {\n        return n.__sn.id === IGNORED_NODE;\n    }\n    return false;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    var id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win) {\n    if (win === void 0) { win = window; }\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = function contains(node) {\n            if (!(0 in arguments)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nvar TreeIndex = (function () {\n    function TreeIndex() {\n        this.reset();\n    }\n    TreeIndex.prototype.add = function (mutation) {\n        var parentTreeNode = this.indexes.get(mutation.parentId);\n        var treeNode = {\n            id: mutation.node.id,\n            mutation: mutation,\n            children: [],\n            texts: [],\n            attributes: [],\n        };\n        if (!parentTreeNode) {\n            this.tree[treeNode.id] = treeNode;\n        }\n        else {\n            treeNode.parent = parentTreeNode;\n            parentTreeNode.children[treeNode.id] = treeNode;\n        }\n        this.indexes.set(treeNode.id, treeNode);\n    };\n    TreeIndex.prototype.remove = function (mutation, mirror) {\n        var _this = this;\n        var parentTreeNode = this.indexes.get(mutation.parentId);\n        var treeNode = this.indexes.get(mutation.id);\n        var deepRemoveFromMirror = function (id) {\n            _this.removeIdSet.add(id);\n            var node = mirror.getNode(id);\n            node === null || node === void 0 ? void 0 : node.childNodes.forEach(function (childNode) {\n                if ('__sn' in childNode) {\n                    deepRemoveFromMirror(childNode.__sn.id);\n                }\n            });\n        };\n        var deepRemoveFromTreeIndex = function (node) {\n            _this.removeIdSet.add(node.id);\n            Object.values(node.children).forEach(function (n) { return deepRemoveFromTreeIndex(n); });\n            var _treeNode = _this.indexes.get(node.id);\n            if (_treeNode) {\n                var _parentTreeNode = _treeNode.parent;\n                if (_parentTreeNode) {\n                    delete _treeNode.parent;\n                    delete _parentTreeNode.children[_treeNode.id];\n                    _this.indexes.delete(mutation.id);\n                }\n            }\n        };\n        if (!treeNode) {\n            this.removeNodeMutations.push(mutation);\n            deepRemoveFromMirror(mutation.id);\n        }\n        else if (!parentTreeNode) {\n            delete this.tree[treeNode.id];\n            this.indexes.delete(treeNode.id);\n            deepRemoveFromTreeIndex(treeNode);\n        }\n        else {\n            delete treeNode.parent;\n            delete parentTreeNode.children[treeNode.id];\n            this.indexes.delete(mutation.id);\n            deepRemoveFromTreeIndex(treeNode);\n        }\n    };\n    TreeIndex.prototype.text = function (mutation) {\n        var treeNode = this.indexes.get(mutation.id);\n        if (treeNode) {\n            treeNode.texts.push(mutation);\n        }\n        else {\n            this.textMutations.push(mutation);\n        }\n    };\n    TreeIndex.prototype.attribute = function (mutation) {\n        var treeNode = this.indexes.get(mutation.id);\n        if (treeNode) {\n            treeNode.attributes.push(mutation);\n        }\n        else {\n            this.attributeMutations.push(mutation);\n        }\n    };\n    TreeIndex.prototype.scroll = function (d) {\n        this.scrollMap.set(d.id, d);\n    };\n    TreeIndex.prototype.input = function (d) {\n        this.inputMap.set(d.id, d);\n    };\n    TreeIndex.prototype.flush = function () {\n        var e_1, _a, e_2, _b;\n        var _this = this;\n        var _c = this, tree = _c.tree, removeNodeMutations = _c.removeNodeMutations, textMutations = _c.textMutations, attributeMutations = _c.attributeMutations;\n        var batchMutationData = {\n            source: IncrementalSource.Mutation,\n            removes: removeNodeMutations,\n            texts: textMutations,\n            attributes: attributeMutations,\n            adds: [],\n        };\n        var walk = function (treeNode, removed) {\n            if (removed) {\n                _this.removeIdSet.add(treeNode.id);\n            }\n            batchMutationData.texts = batchMutationData.texts\n                .concat(removed ? [] : treeNode.texts)\n                .filter(function (m) { return !_this.removeIdSet.has(m.id); });\n            batchMutationData.attributes = batchMutationData.attributes\n                .concat(removed ? [] : treeNode.attributes)\n                .filter(function (m) { return !_this.removeIdSet.has(m.id); });\n            if (!_this.removeIdSet.has(treeNode.id) &&\n                !_this.removeIdSet.has(treeNode.mutation.parentId) &&\n                !removed) {\n                batchMutationData.adds.push(treeNode.mutation);\n                if (treeNode.children) {\n                    Object.values(treeNode.children).forEach(function (n) { return walk(n, false); });\n                }\n            }\n            else {\n                Object.values(treeNode.children).forEach(function (n) { return walk(n, true); });\n            }\n        };\n        Object.values(tree).forEach(function (n) { return walk(n, false); });\n        try {\n            for (var _d = __values(this.scrollMap.keys()), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var id = _e.value;\n                if (this.removeIdSet.has(id)) {\n                    this.scrollMap.delete(id);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var _f = __values(this.inputMap.keys()), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var id = _g.value;\n                if (this.removeIdSet.has(id)) {\n                    this.inputMap.delete(id);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var scrollMap = new Map(this.scrollMap);\n        var inputMap = new Map(this.inputMap);\n        this.reset();\n        return {\n            mutationData: batchMutationData,\n            scrollMap: scrollMap,\n            inputMap: inputMap,\n        };\n    };\n    TreeIndex.prototype.reset = function () {\n        this.tree = [];\n        this.indexes = new Map();\n        this.removeNodeMutations = [];\n        this.textMutations = [];\n        this.attributeMutations = [];\n        this.removeIdSet = new Set();\n        this.scrollMap = new Map();\n        this.inputMap = new Map();\n    };\n    TreeIndex.prototype.idRemoved = function (id) {\n        return this.removeIdSet.has(id);\n    };\n    return TreeIndex;\n}());\nfunction queueToResolveTrees(queue) {\n    var e_3, _a;\n    var queueNodeMap = {};\n    var putIntoMap = function (m, parent) {\n        var nodeInTree = {\n            value: m,\n            parent: parent,\n            children: [],\n        };\n        queueNodeMap[m.node.id] = nodeInTree;\n        return nodeInTree;\n    };\n    var queueNodeTrees = [];\n    try {\n        for (var queue_1 = __values(queue), queue_1_1 = queue_1.next(); !queue_1_1.done; queue_1_1 = queue_1.next()) {\n            var mutation = queue_1_1.value;\n            var nextId = mutation.nextId, parentId = mutation.parentId;\n            if (nextId && nextId in queueNodeMap) {\n                var nextInTree = queueNodeMap[nextId];\n                if (nextInTree.parent) {\n                    var idx = nextInTree.parent.children.indexOf(nextInTree);\n                    nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\n                }\n                else {\n                    var idx = queueNodeTrees.indexOf(nextInTree);\n                    queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\n                }\n                continue;\n            }\n            if (parentId in queueNodeMap) {\n                var parentInTree = queueNodeMap[parentId];\n                parentInTree.children.push(putIntoMap(mutation, parentInTree));\n                continue;\n            }\n            queueNodeTrees.push(putIntoMap(mutation, null));\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (queue_1_1 && !queue_1_1.done && (_a = queue_1.return)) _a.call(queue_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return queueNodeTrees;\n}\nfunction iterateResolveTree(tree, cb) {\n    cb(tree.value);\n    for (var i = tree.children.length - 1; i >= 0; i--) {\n        iterateResolveTree(tree.children[i], cb);\n    }\n}\nfunction isIframeINode(node) {\n    if ('__sn' in node) {\n        return (node.__sn.type === NodeType.Element && node.__sn.tagName === 'iframe');\n    }\n    return false;\n}\nfunction getBaseDimension(node, rootIframe) {\n    var _a, _b;\n    var frameElement = (_b = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b.frameElement;\n    if (!frameElement || frameElement === rootIframe) {\n        return {\n            x: 0,\n            y: 0,\n            relativeScale: 1,\n            absoluteScale: 1,\n        };\n    }\n    var frameDimension = frameElement.getBoundingClientRect();\n    var frameBaseDimension = getBaseDimension(frameElement, rootIframe);\n    var relativeScale = frameDimension.height / frameElement.clientHeight;\n    return {\n        x: frameDimension.x * frameBaseDimension.relativeScale +\n            frameBaseDimension.x,\n        y: frameDimension.y * frameBaseDimension.relativeScale +\n            frameBaseDimension.y,\n        relativeScale: relativeScale,\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\n    };\n}\nfunction hasShadowRoot(n) {\n    return Boolean(n === null || n === void 0 ? void 0 : n.shadowRoot);\n}\n\nexport { TreeIndex, _mirror, createMirror, getBaseDimension, getWindowHeight, getWindowWidth, hasShadowRoot, hookSetter, isAncestorRemoved, isBlocked, isIframeINode, isIgnored, isTouchEvent, iterateResolveTree, on, patch, polyfill, queueToResolveTrees, throttle };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}