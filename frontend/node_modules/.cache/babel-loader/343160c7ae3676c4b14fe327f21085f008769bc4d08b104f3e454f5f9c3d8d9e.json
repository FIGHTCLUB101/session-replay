{"ast":null,"code":"import { __values, __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { patch } from '../../../utils.js';\nimport { ErrorStackParser } from './error-stack-parser.js';\nimport { stringify } from './stringify.js';\nvar defaultLogOptions = {\n  level: ['assert', 'clear', 'count', 'countReset', 'debug', 'dir', 'dirxml', 'error', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'table', 'time', 'timeEnd', 'timeLog', 'trace', 'warn'],\n  lengthThreshold: 1000,\n  logger: 'console'\n};\nfunction initLogObserver(cb, win, logOptions) {\n  var e_1, _a;\n  var loggerType = logOptions.logger;\n  if (!loggerType) {\n    return function () {};\n  }\n  var logger;\n  if (typeof loggerType === 'string') {\n    logger = win[loggerType];\n  } else {\n    logger = loggerType;\n  }\n  var logCount = 0;\n  var cancelHandlers = [];\n  if (logOptions.level.includes('error')) {\n    if (window) {\n      var errorHandler_1 = function (event) {\n        var message = event.message,\n          error = event.error;\n        var trace = ErrorStackParser.parse(error).map(function (stackFrame) {\n          return stackFrame.toString();\n        });\n        var payload = [stringify(message, logOptions.stringifyOptions)];\n        cb({\n          level: 'error',\n          trace: trace,\n          payload: payload\n        });\n      };\n      window.addEventListener('error', errorHandler_1);\n      cancelHandlers.push(function () {\n        if (window) window.removeEventListener('error', errorHandler_1);\n      });\n    }\n  }\n  try {\n    for (var _b = __values(logOptions.level), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var levelType = _c.value;\n      cancelHandlers.push(replace(logger, levelType));\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return function () {\n    cancelHandlers.forEach(function (h) {\n      return h();\n    });\n  };\n  function replace(_logger, level) {\n    var _this = this;\n    if (!_logger[level]) {\n      return function () {};\n    }\n    return patch(_logger, level, function (original) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        original.apply(_this, args);\n        try {\n          var trace = ErrorStackParser.parse(new Error()).map(function (stackFrame) {\n            return stackFrame.toString();\n          }).splice(1);\n          var payload = args.map(function (s) {\n            return stringify(s, logOptions.stringifyOptions);\n          });\n          logCount++;\n          if (logCount < logOptions.lengthThreshold) {\n            cb({\n              level: level,\n              trace: trace,\n              payload: payload\n            });\n          } else if (logCount === logOptions.lengthThreshold) {\n            cb({\n              level: 'warn',\n              trace: [],\n              payload: [stringify('The number of log records reached the threshold.')]\n            });\n          }\n        } catch (error) {\n          original.apply(void 0, __spreadArray(['rrweb logger error:', error], __read(args), false));\n        }\n      };\n    });\n  }\n}\nvar PLUGIN_NAME = 'rrweb/console@1';\nvar getRecordConsolePlugin = function (options) {\n  return {\n    name: PLUGIN_NAME,\n    observer: initLogObserver,\n    options: options ? Object.assign({}, defaultLogOptions, options) : defaultLogOptions\n  };\n};\nexport { PLUGIN_NAME, getRecordConsolePlugin };","map":{"version":3,"names":["__values","__spreadArray","__read","patch","ErrorStackParser","stringify","defaultLogOptions","level","lengthThreshold","logger","initLogObserver","cb","win","logOptions","e_1","_a","loggerType","logCount","cancelHandlers","includes","window","errorHandler_1","event","message","error","trace","parse","map","stackFrame","toString","payload","stringifyOptions","addEventListener","push","removeEventListener","_b","_c","next","done","levelType","value","replace","e_1_1","return","call","forEach","h","_logger","_this","original","args","_i","arguments","length","apply","Error","splice","s","PLUGIN_NAME","getRecordConsolePlugin","options","name","observer","Object","assign"],"sources":["C:/Users/PRIYAM/OneDrive/Desktop/session replay/frontend/node_modules/rrweb/es/rrweb/packages/rrweb/src/plugins/console/record/index.js"],"sourcesContent":["import { __values, __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { patch } from '../../../utils.js';\nimport { ErrorStackParser } from './error-stack-parser.js';\nimport { stringify } from './stringify.js';\n\nvar defaultLogOptions = {\n    level: [\n        'assert',\n        'clear',\n        'count',\n        'countReset',\n        'debug',\n        'dir',\n        'dirxml',\n        'error',\n        'group',\n        'groupCollapsed',\n        'groupEnd',\n        'info',\n        'log',\n        'table',\n        'time',\n        'timeEnd',\n        'timeLog',\n        'trace',\n        'warn',\n    ],\n    lengthThreshold: 1000,\n    logger: 'console',\n};\nfunction initLogObserver(cb, win, logOptions) {\n    var e_1, _a;\n    var loggerType = logOptions.logger;\n    if (!loggerType) {\n        return function () { };\n    }\n    var logger;\n    if (typeof loggerType === 'string') {\n        logger = win[loggerType];\n    }\n    else {\n        logger = loggerType;\n    }\n    var logCount = 0;\n    var cancelHandlers = [];\n    if (logOptions.level.includes('error')) {\n        if (window) {\n            var errorHandler_1 = function (event) {\n                var message = event.message, error = event.error;\n                var trace = ErrorStackParser.parse(error).map(function (stackFrame) { return stackFrame.toString(); });\n                var payload = [stringify(message, logOptions.stringifyOptions)];\n                cb({\n                    level: 'error',\n                    trace: trace,\n                    payload: payload,\n                });\n            };\n            window.addEventListener('error', errorHandler_1);\n            cancelHandlers.push(function () {\n                if (window)\n                    window.removeEventListener('error', errorHandler_1);\n            });\n        }\n    }\n    try {\n        for (var _b = __values(logOptions.level), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var levelType = _c.value;\n            cancelHandlers.push(replace(logger, levelType));\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return function () {\n        cancelHandlers.forEach(function (h) { return h(); });\n    };\n    function replace(_logger, level) {\n        var _this = this;\n        if (!_logger[level]) {\n            return function () { };\n        }\n        return patch(_logger, level, function (original) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                original.apply(_this, args);\n                try {\n                    var trace = ErrorStackParser.parse(new Error())\n                        .map(function (stackFrame) { return stackFrame.toString(); })\n                        .splice(1);\n                    var payload = args.map(function (s) {\n                        return stringify(s, logOptions.stringifyOptions);\n                    });\n                    logCount++;\n                    if (logCount < logOptions.lengthThreshold) {\n                        cb({\n                            level: level,\n                            trace: trace,\n                            payload: payload,\n                        });\n                    }\n                    else if (logCount === logOptions.lengthThreshold) {\n                        cb({\n                            level: 'warn',\n                            trace: [],\n                            payload: [\n                                stringify('The number of log records reached the threshold.'),\n                            ],\n                        });\n                    }\n                }\n                catch (error) {\n                    original.apply(void 0, __spreadArray(['rrweb logger error:', error], __read(args), false));\n                }\n            };\n        });\n    }\n}\nvar PLUGIN_NAME = 'rrweb/console@1';\nvar getRecordConsolePlugin = function (options) { return ({\n    name: PLUGIN_NAME,\n    observer: initLogObserver,\n    options: options\n        ? Object.assign({}, defaultLogOptions, options)\n        : defaultLogOptions,\n}); };\n\nexport { PLUGIN_NAME, getRecordConsolePlugin };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}