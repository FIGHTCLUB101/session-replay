{"ast":null,"code":"import { __assign, __values } from '../../ext/tslib/tslib.es6.js';\nimport { interpret as v, createMachine as s, assign as o } from '../../../../ext/@xstate/fsm/es/index.js';\nimport { EventType, IncrementalSource, ReplayerEvents } from '../types.js';\nimport { addDelay } from './timer.js';\nfunction discardPriorSnapshots(events, baselineTime) {\n  for (var idx = events.length - 1; idx >= 0; idx--) {\n    var event_1 = events[idx];\n    if (event_1.type === EventType.Meta) {\n      if (event_1.timestamp <= baselineTime) {\n        return events.slice(idx);\n      }\n    }\n  }\n  return events;\n}\nfunction createPlayerService(context, _a) {\n  var getCastFn = _a.getCastFn,\n    applyEventsSynchronously = _a.applyEventsSynchronously,\n    emitter = _a.emitter;\n  var playerMachine = s({\n    id: 'player',\n    context: context,\n    initial: 'paused',\n    states: {\n      playing: {\n        on: {\n          PAUSE: {\n            target: 'paused',\n            actions: ['pause']\n          },\n          CAST_EVENT: {\n            target: 'playing',\n            actions: 'castEvent'\n          },\n          END: {\n            target: 'paused',\n            actions: ['resetLastPlayedEvent', 'pause']\n          },\n          ADD_EVENT: {\n            target: 'playing',\n            actions: ['addEvent']\n          }\n        }\n      },\n      paused: {\n        on: {\n          PLAY: {\n            target: 'playing',\n            actions: ['recordTimeOffset', 'play']\n          },\n          CAST_EVENT: {\n            target: 'paused',\n            actions: 'castEvent'\n          },\n          TO_LIVE: {\n            target: 'live',\n            actions: ['startLive']\n          },\n          ADD_EVENT: {\n            target: 'paused',\n            actions: ['addEvent']\n          }\n        }\n      },\n      live: {\n        on: {\n          ADD_EVENT: {\n            target: 'live',\n            actions: ['addEvent']\n          },\n          CAST_EVENT: {\n            target: 'live',\n            actions: ['castEvent']\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      castEvent: o({\n        lastPlayedEvent: function (ctx, event) {\n          if (event.type === 'CAST_EVENT') {\n            return event.payload.event;\n          }\n          return ctx.lastPlayedEvent;\n        }\n      }),\n      recordTimeOffset: o(function (ctx, event) {\n        var timeOffset = ctx.timeOffset;\n        if ('payload' in event && 'timeOffset' in event.payload) {\n          timeOffset = event.payload.timeOffset;\n        }\n        return __assign(__assign({}, ctx), {\n          timeOffset: timeOffset,\n          baselineTime: ctx.events[0].timestamp + timeOffset\n        });\n      }),\n      play: function (ctx) {\n        var e_1, _a, e_2, _b;\n        var _c;\n        var timer = ctx.timer,\n          events = ctx.events,\n          baselineTime = ctx.baselineTime,\n          lastPlayedEvent = ctx.lastPlayedEvent;\n        timer.clear();\n        try {\n          for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n            var event_2 = events_1_1.value;\n            addDelay(event_2, baselineTime);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n        var neededEvents = discardPriorSnapshots(events, baselineTime);\n        var lastPlayedTimestamp = lastPlayedEvent === null || lastPlayedEvent === void 0 ? void 0 : lastPlayedEvent.timestamp;\n        if ((lastPlayedEvent === null || lastPlayedEvent === void 0 ? void 0 : lastPlayedEvent.type) === EventType.IncrementalSnapshot && lastPlayedEvent.data.source === IncrementalSource.MouseMove) {\n          lastPlayedTimestamp = lastPlayedEvent.timestamp + ((_c = lastPlayedEvent.data.positions[0]) === null || _c === void 0 ? void 0 : _c.timeOffset);\n        }\n        if (baselineTime < (lastPlayedTimestamp || 0)) {\n          emitter.emit(ReplayerEvents.PlayBack);\n        }\n        var syncEvents = new Array();\n        var actions = new Array();\n        var _loop_1 = function (event_3) {\n          if (lastPlayedTimestamp && lastPlayedTimestamp < baselineTime && (event_3.timestamp <= lastPlayedTimestamp || event_3 === lastPlayedEvent)) {\n            return \"continue\";\n          }\n          if (event_3.timestamp < baselineTime) {\n            syncEvents.push(event_3);\n          } else {\n            var castFn_1 = getCastFn(event_3, false);\n            actions.push({\n              doAction: function () {\n                castFn_1();\n              },\n              delay: event_3.delay\n            });\n          }\n        };\n        try {\n          for (var neededEvents_1 = __values(neededEvents), neededEvents_1_1 = neededEvents_1.next(); !neededEvents_1_1.done; neededEvents_1_1 = neededEvents_1.next()) {\n            var event_3 = neededEvents_1_1.value;\n            _loop_1(event_3);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (neededEvents_1_1 && !neededEvents_1_1.done && (_b = neededEvents_1.return)) _b.call(neededEvents_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n        applyEventsSynchronously(syncEvents);\n        emitter.emit(ReplayerEvents.Flush);\n        timer.addActions(actions);\n        timer.start();\n      },\n      pause: function (ctx) {\n        ctx.timer.clear();\n      },\n      resetLastPlayedEvent: o(function (ctx) {\n        return __assign(__assign({}, ctx), {\n          lastPlayedEvent: null\n        });\n      }),\n      startLive: o({\n        baselineTime: function (ctx, event) {\n          ctx.timer.toggleLiveMode(true);\n          ctx.timer.start();\n          if (event.type === 'TO_LIVE' && event.payload.baselineTime) {\n            return event.payload.baselineTime;\n          }\n          return Date.now();\n        }\n      }),\n      addEvent: o(function (ctx, machineEvent) {\n        var baselineTime = ctx.baselineTime,\n          timer = ctx.timer,\n          events = ctx.events;\n        if (machineEvent.type === 'ADD_EVENT') {\n          var event_4 = machineEvent.payload.event;\n          addDelay(event_4, baselineTime);\n          var end = events.length - 1;\n          if (!events[end] || events[end].timestamp <= event_4.timestamp) {\n            events.push(event_4);\n          } else {\n            var insertionIndex = -1;\n            var start = 0;\n            while (start <= end) {\n              var mid = Math.floor((start + end) / 2);\n              if (events[mid].timestamp <= event_4.timestamp) {\n                start = mid + 1;\n              } else {\n                end = mid - 1;\n              }\n            }\n            if (insertionIndex === -1) {\n              insertionIndex = start;\n            }\n            events.splice(insertionIndex, 0, event_4);\n          }\n          var isSync = event_4.timestamp < baselineTime;\n          var castFn_2 = getCastFn(event_4, isSync);\n          if (isSync) {\n            castFn_2();\n          } else if (timer.isActive()) {\n            timer.addAction({\n              doAction: function () {\n                castFn_2();\n              },\n              delay: event_4.delay\n            });\n          }\n        }\n        return __assign(__assign({}, ctx), {\n          events: events\n        });\n      })\n    }\n  });\n  return v(playerMachine);\n}\nfunction createSpeedService(context) {\n  var speedMachine = s({\n    id: 'speed',\n    context: context,\n    initial: 'normal',\n    states: {\n      normal: {\n        on: {\n          FAST_FORWARD: {\n            target: 'skipping',\n            actions: ['recordSpeed', 'setSpeed']\n          },\n          SET_SPEED: {\n            target: 'normal',\n            actions: ['setSpeed']\n          }\n        }\n      },\n      skipping: {\n        on: {\n          BACK_TO_NORMAL: {\n            target: 'normal',\n            actions: ['restoreSpeed']\n          },\n          SET_SPEED: {\n            target: 'normal',\n            actions: ['setSpeed']\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      setSpeed: function (ctx, event) {\n        if ('payload' in event) {\n          ctx.timer.setSpeed(event.payload.speed);\n        }\n      },\n      recordSpeed: o({\n        normalSpeed: function (ctx) {\n          return ctx.timer.speed;\n        }\n      }),\n      restoreSpeed: function (ctx) {\n        ctx.timer.setSpeed(ctx.normalSpeed);\n      }\n    }\n  });\n  return v(speedMachine);\n}\nexport { createPlayerService, createSpeedService, discardPriorSnapshots };","map":{"version":3,"names":["__assign","__values","interpret","v","createMachine","s","assign","o","EventType","IncrementalSource","ReplayerEvents","addDelay","discardPriorSnapshots","events","baselineTime","idx","length","event_1","type","Meta","timestamp","slice","createPlayerService","context","_a","getCastFn","applyEventsSynchronously","emitter","playerMachine","id","initial","states","playing","on","PAUSE","target","actions","CAST_EVENT","END","ADD_EVENT","paused","PLAY","TO_LIVE","live","castEvent","lastPlayedEvent","ctx","event","payload","recordTimeOffset","timeOffset","play","e_1","e_2","_b","_c","timer","clear","events_1","events_1_1","next","done","event_2","value","e_1_1","error","return","call","neededEvents","lastPlayedTimestamp","IncrementalSnapshot","data","source","MouseMove","positions","emit","PlayBack","syncEvents","Array","_loop_1","event_3","push","castFn_1","doAction","delay","neededEvents_1","neededEvents_1_1","e_2_1","Flush","addActions","start","pause","resetLastPlayedEvent","startLive","toggleLiveMode","Date","now","addEvent","machineEvent","event_4","end","insertionIndex","mid","Math","floor","splice","isSync","castFn_2","isActive","addAction","createSpeedService","speedMachine","normal","FAST_FORWARD","SET_SPEED","skipping","BACK_TO_NORMAL","setSpeed","speed","recordSpeed","normalSpeed","restoreSpeed"],"sources":["C:/Users/PRIYAM/OneDrive/Desktop/session replay/frontend/node_modules/rrweb/es/rrweb/packages/rrweb/src/replay/machine.js"],"sourcesContent":["import { __assign, __values } from '../../ext/tslib/tslib.es6.js';\nimport { interpret as v, createMachine as s, assign as o } from '../../../../ext/@xstate/fsm/es/index.js';\nimport { EventType, IncrementalSource, ReplayerEvents } from '../types.js';\nimport { addDelay } from './timer.js';\n\nfunction discardPriorSnapshots(events, baselineTime) {\n    for (var idx = events.length - 1; idx >= 0; idx--) {\n        var event_1 = events[idx];\n        if (event_1.type === EventType.Meta) {\n            if (event_1.timestamp <= baselineTime) {\n                return events.slice(idx);\n            }\n        }\n    }\n    return events;\n}\nfunction createPlayerService(context, _a) {\n    var getCastFn = _a.getCastFn, applyEventsSynchronously = _a.applyEventsSynchronously, emitter = _a.emitter;\n    var playerMachine = s({\n        id: 'player',\n        context: context,\n        initial: 'paused',\n        states: {\n            playing: {\n                on: {\n                    PAUSE: {\n                        target: 'paused',\n                        actions: ['pause'],\n                    },\n                    CAST_EVENT: {\n                        target: 'playing',\n                        actions: 'castEvent',\n                    },\n                    END: {\n                        target: 'paused',\n                        actions: ['resetLastPlayedEvent', 'pause'],\n                    },\n                    ADD_EVENT: {\n                        target: 'playing',\n                        actions: ['addEvent'],\n                    },\n                },\n            },\n            paused: {\n                on: {\n                    PLAY: {\n                        target: 'playing',\n                        actions: ['recordTimeOffset', 'play'],\n                    },\n                    CAST_EVENT: {\n                        target: 'paused',\n                        actions: 'castEvent',\n                    },\n                    TO_LIVE: {\n                        target: 'live',\n                        actions: ['startLive'],\n                    },\n                    ADD_EVENT: {\n                        target: 'paused',\n                        actions: ['addEvent'],\n                    },\n                },\n            },\n            live: {\n                on: {\n                    ADD_EVENT: {\n                        target: 'live',\n                        actions: ['addEvent'],\n                    },\n                    CAST_EVENT: {\n                        target: 'live',\n                        actions: ['castEvent'],\n                    },\n                },\n            },\n        },\n    }, {\n        actions: {\n            castEvent: o({\n                lastPlayedEvent: function (ctx, event) {\n                    if (event.type === 'CAST_EVENT') {\n                        return event.payload.event;\n                    }\n                    return ctx.lastPlayedEvent;\n                },\n            }),\n            recordTimeOffset: o(function (ctx, event) {\n                var timeOffset = ctx.timeOffset;\n                if ('payload' in event && 'timeOffset' in event.payload) {\n                    timeOffset = event.payload.timeOffset;\n                }\n                return __assign(__assign({}, ctx), { timeOffset: timeOffset, baselineTime: ctx.events[0].timestamp + timeOffset });\n            }),\n            play: function (ctx) {\n                var e_1, _a, e_2, _b;\n                var _c;\n                var timer = ctx.timer, events = ctx.events, baselineTime = ctx.baselineTime, lastPlayedEvent = ctx.lastPlayedEvent;\n                timer.clear();\n                try {\n                    for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n                        var event_2 = events_1_1.value;\n                        addDelay(event_2, baselineTime);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                var neededEvents = discardPriorSnapshots(events, baselineTime);\n                var lastPlayedTimestamp = lastPlayedEvent === null || lastPlayedEvent === void 0 ? void 0 : lastPlayedEvent.timestamp;\n                if ((lastPlayedEvent === null || lastPlayedEvent === void 0 ? void 0 : lastPlayedEvent.type) === EventType.IncrementalSnapshot &&\n                    lastPlayedEvent.data.source === IncrementalSource.MouseMove) {\n                    lastPlayedTimestamp =\n                        lastPlayedEvent.timestamp +\n                            ((_c = lastPlayedEvent.data.positions[0]) === null || _c === void 0 ? void 0 : _c.timeOffset);\n                }\n                if (baselineTime < (lastPlayedTimestamp || 0)) {\n                    emitter.emit(ReplayerEvents.PlayBack);\n                }\n                var syncEvents = new Array();\n                var actions = new Array();\n                var _loop_1 = function (event_3) {\n                    if (lastPlayedTimestamp &&\n                        lastPlayedTimestamp < baselineTime &&\n                        (event_3.timestamp <= lastPlayedTimestamp ||\n                            event_3 === lastPlayedEvent)) {\n                        return \"continue\";\n                    }\n                    if (event_3.timestamp < baselineTime) {\n                        syncEvents.push(event_3);\n                    }\n                    else {\n                        var castFn_1 = getCastFn(event_3, false);\n                        actions.push({\n                            doAction: function () {\n                                castFn_1();\n                            },\n                            delay: event_3.delay,\n                        });\n                    }\n                };\n                try {\n                    for (var neededEvents_1 = __values(neededEvents), neededEvents_1_1 = neededEvents_1.next(); !neededEvents_1_1.done; neededEvents_1_1 = neededEvents_1.next()) {\n                        var event_3 = neededEvents_1_1.value;\n                        _loop_1(event_3);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (neededEvents_1_1 && !neededEvents_1_1.done && (_b = neededEvents_1.return)) _b.call(neededEvents_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                applyEventsSynchronously(syncEvents);\n                emitter.emit(ReplayerEvents.Flush);\n                timer.addActions(actions);\n                timer.start();\n            },\n            pause: function (ctx) {\n                ctx.timer.clear();\n            },\n            resetLastPlayedEvent: o(function (ctx) {\n                return __assign(__assign({}, ctx), { lastPlayedEvent: null });\n            }),\n            startLive: o({\n                baselineTime: function (ctx, event) {\n                    ctx.timer.toggleLiveMode(true);\n                    ctx.timer.start();\n                    if (event.type === 'TO_LIVE' && event.payload.baselineTime) {\n                        return event.payload.baselineTime;\n                    }\n                    return Date.now();\n                },\n            }),\n            addEvent: o(function (ctx, machineEvent) {\n                var baselineTime = ctx.baselineTime, timer = ctx.timer, events = ctx.events;\n                if (machineEvent.type === 'ADD_EVENT') {\n                    var event_4 = machineEvent.payload.event;\n                    addDelay(event_4, baselineTime);\n                    var end = events.length - 1;\n                    if (!events[end] || events[end].timestamp <= event_4.timestamp) {\n                        events.push(event_4);\n                    }\n                    else {\n                        var insertionIndex = -1;\n                        var start = 0;\n                        while (start <= end) {\n                            var mid = Math.floor((start + end) / 2);\n                            if (events[mid].timestamp <= event_4.timestamp) {\n                                start = mid + 1;\n                            }\n                            else {\n                                end = mid - 1;\n                            }\n                        }\n                        if (insertionIndex === -1) {\n                            insertionIndex = start;\n                        }\n                        events.splice(insertionIndex, 0, event_4);\n                    }\n                    var isSync = event_4.timestamp < baselineTime;\n                    var castFn_2 = getCastFn(event_4, isSync);\n                    if (isSync) {\n                        castFn_2();\n                    }\n                    else if (timer.isActive()) {\n                        timer.addAction({\n                            doAction: function () {\n                                castFn_2();\n                            },\n                            delay: event_4.delay,\n                        });\n                    }\n                }\n                return __assign(__assign({}, ctx), { events: events });\n            }),\n        },\n    });\n    return v(playerMachine);\n}\nfunction createSpeedService(context) {\n    var speedMachine = s({\n        id: 'speed',\n        context: context,\n        initial: 'normal',\n        states: {\n            normal: {\n                on: {\n                    FAST_FORWARD: {\n                        target: 'skipping',\n                        actions: ['recordSpeed', 'setSpeed'],\n                    },\n                    SET_SPEED: {\n                        target: 'normal',\n                        actions: ['setSpeed'],\n                    },\n                },\n            },\n            skipping: {\n                on: {\n                    BACK_TO_NORMAL: {\n                        target: 'normal',\n                        actions: ['restoreSpeed'],\n                    },\n                    SET_SPEED: {\n                        target: 'normal',\n                        actions: ['setSpeed'],\n                    },\n                },\n            },\n        },\n    }, {\n        actions: {\n            setSpeed: function (ctx, event) {\n                if ('payload' in event) {\n                    ctx.timer.setSpeed(event.payload.speed);\n                }\n            },\n            recordSpeed: o({\n                normalSpeed: function (ctx) { return ctx.timer.speed; },\n            }),\n            restoreSpeed: function (ctx) {\n                ctx.timer.setSpeed(ctx.normalSpeed);\n            },\n        },\n    });\n    return v(speedMachine);\n}\n\nexport { createPlayerService, createSpeedService, discardPriorSnapshots };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}