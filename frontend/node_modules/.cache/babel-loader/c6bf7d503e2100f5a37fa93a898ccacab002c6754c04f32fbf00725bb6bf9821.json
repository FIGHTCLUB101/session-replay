{"ast":null,"code":"import { __rest } from '../../../../ext/tslib/tslib.es6.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nvar CanvasManager = function () {\n  function CanvasManager(options) {\n    this.pendingCanvasMutations = new Map();\n    this.rafStamps = {\n      latestId: 0,\n      invokeId: null\n    };\n    this.frozen = false;\n    this.locked = false;\n    this.processMutation = function (target, mutation) {\n      var newFrame = this.rafStamps.invokeId && this.rafStamps.latestId !== this.rafStamps.invokeId;\n      if (newFrame || !this.rafStamps.invokeId) this.rafStamps.invokeId = this.rafStamps.latestId;\n      if (!this.pendingCanvasMutations.has(target)) {\n        this.pendingCanvasMutations.set(target, []);\n      }\n      this.pendingCanvasMutations.get(target).push(mutation);\n    };\n    this.mutationCb = options.mutationCb;\n    this.mirror = options.mirror;\n    if (options.recordCanvas === true) this.initCanvasMutationObserver(options.win, options.blockClass);\n  }\n  CanvasManager.prototype.reset = function () {\n    this.pendingCanvasMutations.clear();\n    this.resetObservers && this.resetObservers();\n  };\n  CanvasManager.prototype.freeze = function () {\n    this.frozen = true;\n  };\n  CanvasManager.prototype.unfreeze = function () {\n    this.frozen = false;\n  };\n  CanvasManager.prototype.lock = function () {\n    this.locked = true;\n  };\n  CanvasManager.prototype.unlock = function () {\n    this.locked = false;\n  };\n  CanvasManager.prototype.initCanvasMutationObserver = function (win, blockClass) {\n    this.startRAFTimestamping();\n    this.startPendingCanvasMutationFlusher();\n    var canvasContextReset = initCanvasContextObserver(win, blockClass);\n    var canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, this.mirror);\n    var canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, this.mirror);\n    this.resetObservers = function () {\n      canvasContextReset();\n      canvas2DReset();\n      canvasWebGL1and2Reset();\n    };\n  };\n  CanvasManager.prototype.startPendingCanvasMutationFlusher = function () {\n    var _this = this;\n    requestAnimationFrame(function () {\n      return _this.flushPendingCanvasMutations();\n    });\n  };\n  CanvasManager.prototype.startRAFTimestamping = function () {\n    var _this = this;\n    var setLatestRAFTimestamp = function (timestamp) {\n      _this.rafStamps.latestId = timestamp;\n      requestAnimationFrame(setLatestRAFTimestamp);\n    };\n    requestAnimationFrame(setLatestRAFTimestamp);\n  };\n  CanvasManager.prototype.flushPendingCanvasMutations = function () {\n    var _this = this;\n    this.pendingCanvasMutations.forEach(function (values, canvas) {\n      var id = _this.mirror.getId(canvas);\n      _this.flushPendingCanvasMutationFor(canvas, id);\n    });\n    requestAnimationFrame(function () {\n      return _this.flushPendingCanvasMutations();\n    });\n  };\n  CanvasManager.prototype.flushPendingCanvasMutationFor = function (canvas, id) {\n    if (this.frozen || this.locked) {\n      return;\n    }\n    var valuesWithType = this.pendingCanvasMutations.get(canvas);\n    if (!valuesWithType || id === -1) return;\n    var values = valuesWithType.map(function (value) {\n      value.type;\n      var rest = __rest(value, [\"type\"]);\n      return rest;\n    });\n    var type = valuesWithType[0].type;\n    this.mutationCb({\n      id: id,\n      type: type,\n      commands: values\n    });\n    this.pendingCanvasMutations.delete(canvas);\n  };\n  return CanvasManager;\n}();\nexport { CanvasManager };","map":{"version":3,"names":["__rest","initCanvas2DMutationObserver","initCanvasContextObserver","initCanvasWebGLMutationObserver","CanvasManager","options","pendingCanvasMutations","Map","rafStamps","latestId","invokeId","frozen","locked","processMutation","target","mutation","newFrame","has","set","get","push","mutationCb","mirror","recordCanvas","initCanvasMutationObserver","win","blockClass","prototype","reset","clear","resetObservers","freeze","unfreeze","lock","unlock","startRAFTimestamping","startPendingCanvasMutationFlusher","canvasContextReset","canvas2DReset","bind","canvasWebGL1and2Reset","_this","requestAnimationFrame","flushPendingCanvasMutations","setLatestRAFTimestamp","timestamp","forEach","values","canvas","id","getId","flushPendingCanvasMutationFor","valuesWithType","map","value","type","rest","commands","delete"],"sources":["C:/Users/PRIYAM/OneDrive/Desktop/session replay/frontend/node_modules/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js"],"sourcesContent":["import { __rest } from '../../../../ext/tslib/tslib.es6.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\n\nvar CanvasManager = (function () {\n    function CanvasManager(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.frozen = false;\n        this.locked = false;\n        this.processMutation = function (target, mutation) {\n            var newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        if (options.recordCanvas === true)\n            this.initCanvasMutationObserver(options.win, options.blockClass);\n    }\n    CanvasManager.prototype.reset = function () {\n        this.pendingCanvasMutations.clear();\n        this.resetObservers && this.resetObservers();\n    };\n    CanvasManager.prototype.freeze = function () {\n        this.frozen = true;\n    };\n    CanvasManager.prototype.unfreeze = function () {\n        this.frozen = false;\n    };\n    CanvasManager.prototype.lock = function () {\n        this.locked = true;\n    };\n    CanvasManager.prototype.unlock = function () {\n        this.locked = false;\n    };\n    CanvasManager.prototype.initCanvasMutationObserver = function (win, blockClass) {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n        var canvasContextReset = initCanvasContextObserver(win, blockClass);\n        var canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, this.mirror);\n        var canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, this.mirror);\n        this.resetObservers = function () {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        };\n    };\n    CanvasManager.prototype.startPendingCanvasMutationFlusher = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.flushPendingCanvasMutations(); });\n    };\n    CanvasManager.prototype.startRAFTimestamping = function () {\n        var _this = this;\n        var setLatestRAFTimestamp = function (timestamp) {\n            _this.rafStamps.latestId = timestamp;\n            requestAnimationFrame(setLatestRAFTimestamp);\n        };\n        requestAnimationFrame(setLatestRAFTimestamp);\n    };\n    CanvasManager.prototype.flushPendingCanvasMutations = function () {\n        var _this = this;\n        this.pendingCanvasMutations.forEach(function (values, canvas) {\n            var id = _this.mirror.getId(canvas);\n            _this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        requestAnimationFrame(function () { return _this.flushPendingCanvasMutations(); });\n    };\n    CanvasManager.prototype.flushPendingCanvasMutationFor = function (canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        var valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        var values = valuesWithType.map(function (value) {\n            value.type; var rest = __rest(value, [\"type\"]);\n            return rest;\n        });\n        var type = valuesWithType[0].type;\n        this.mutationCb({ id: id, type: type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    };\n    return CanvasManager;\n}());\n\nexport { CanvasManager };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}