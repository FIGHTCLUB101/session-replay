{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRIYAM\\\\OneDrive\\\\Desktop\\\\session replay\\\\frontend\\\\src\\\\components\\\\SessionPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Replayer } from 'rrweb-player';\n//import rrwebPlayer from 'rrweb-player';\nimport 'rrweb-player/dist/style.css';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SessionPlayer() {\n  _s();\n  const {\n    sessionId\n  } = useParams();\n  const playerRef = useRef(null);\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const res = await api.get(`/sessions/${sessionId}/events`);\n        setEvents(res.data.map(e => ({\n          timestamp: e.timestamp,\n          data: e.data,\n          type: e.type\n        })));\n        setLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchEvents();\n  }, [sessionId]);\n  useEffect(() => {\n    if (!loading && events.length > 0) {\n      new rrwebPlayer({\n        target: playerRef.current,\n        props: {\n          events\n        }\n      });\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playback Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: playerRef,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(SessionPlayer, \"3z7RfWXq+bbAXHDnVevTI7zN2dI=\", false, function () {\n  return [useParams];\n});\n_c = SessionPlayer;\nvar _c;\n$RefreshReg$(_c, \"SessionPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","Replayer","api","jsxDEV","_jsxDEV","SessionPlayer","_s","sessionId","playerRef","events","setEvents","loading","setLoading","fetchEvents","res","get","data","map","e","timestamp","type","err","console","error","length","rrwebPlayer","target","current","props","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","_c","$RefreshReg$"],"sources":["C:/Users/PRIYAM/OneDrive/Desktop/session replay/frontend/src/components/SessionPlayer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Replayer } from 'rrweb-player';\r\n//import rrwebPlayer from 'rrweb-player';\r\nimport 'rrweb-player/dist/style.css';\r\nimport api from '../api';\r\n\r\nexport default function SessionPlayer() {\r\n  const { sessionId } = useParams();\r\n  const playerRef = useRef(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const res = await api.get(`/sessions/${sessionId}/events`);\r\n        setEvents(res.data.map((e) => ({\r\n          timestamp: e.timestamp,\r\n          data: e.data,\r\n          type: e.type,\r\n        })));\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    fetchEvents();\r\n  }, [sessionId]);\r\n\r\n  useEffect(() => {\r\n    if (!loading && events.length > 0) {\r\n      new rrwebPlayer({\r\n        target: playerRef.current,\r\n        props: {\r\n          events,\r\n        },\r\n      });\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Playback Session</h2>\r\n      {loading ? <p>Loading events...</p> : <div ref={playerRef} style={{ width: '100%' }}></div>}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,cAAc;AACvC;AACA,OAAO,6BAA6B;AACpC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;EACjC,MAAMQ,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CF,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,aAAaR,SAAS,SAAS,CAAC;QAC1DG,SAAS,CAACI,GAAG,CAACE,IAAI,CAACC,GAAG,CAAEC,CAAC,KAAM;UAC7BC,SAAS,EAAED,CAAC,CAACC,SAAS;UACtBH,IAAI,EAAEE,CAAC,CAACF,IAAI;UACZI,IAAI,EAAEF,CAAC,CAACE;QACV,CAAC,CAAC,CAAC,CAAC;QACJR,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;IACDR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEfV,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,OAAO,IAAIF,MAAM,CAACe,MAAM,GAAG,CAAC,EAAE;MACjC,IAAIC,WAAW,CAAC;QACdC,MAAM,EAAElB,SAAS,CAACmB,OAAO;QACzBC,KAAK,EAAE;UACLnB;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACE,OAAO,CAAC,CAAC;EAEb,oBACEP,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBtB,OAAO,gBAAGP,OAAA;MAAAyB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAG7B,OAAA;MAAK8B,GAAG,EAAE1B,SAAU;MAAC2B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEV;AAAC3B,EAAA,CAxCuBD,aAAa;EAAA,QACbL,SAAS;AAAA;AAAAqC,EAAA,GADThC,aAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}